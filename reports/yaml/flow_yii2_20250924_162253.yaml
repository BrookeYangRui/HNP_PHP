framework: Yii2
timestamp: '2025-09-24T16:22:53.291137'
sources:
- &id001
  file: framework/web/Request.php
  line: 765
  snippet: '     * return the value of `$_SERVER[''HTTP_HOST'']` if it is available
    or `$_SERVER[''SERVER_NAME'']` if not.'
sinks:
- &id002
  file: framework/captcha/CaptchaAction.php
  line: 139
  snippet: '                ''url'' => Url::to([$this->id, ''v'' => uniqid('''', true)]),'
- &id003
  file: framework/grid/GridView.php
  line: 217
  snippet: '     * @var string|array|null the URL for returning the filtering result.
    [[Url::to()]] will be called to'
- &id004
  file: framework/grid/GridView.php
  line: 344
  snippet: '            ''filterUrl'' => Url::to($filterUrl),'
- &id005
  file: framework/web/Response.php
  line: 876
  snippet: '     *   [[Url::to()]] will be used to convert the array into a URL.'
- &id009
  file: framework/web/Response.php
  line: 898
  snippet: '        $normalizedUrl = Url::to($url);'
- &id010
  file: framework/web/UrlNormalizerRedirectException.php
  line: 21
  snippet: '     * @see \yii\helpers\Url::to()'
- &id011
  file: framework/web/UrlNormalizerRedirectException.php
  line: 26
  snippet: '     * @see \yii\helpers\Url::to()'
- &id012
  file: framework/web/UrlNormalizerRedirectException.php
  line: 37
  snippet: '     * This will be used as first parameter for [[\yii\helpers\Url::to()]]'
- &id013
  file: framework/web/UrlNormalizerRedirectException.php
  line: 40
  snippet: '     * This will be used as second parameter for [[\yii\helpers\Url::to()]]'
- &id014
  file: framework/web/Application.php
  line: 93
  snippet: '                return $this->getResponse()->redirect(Url::to($url, $e->scheme),
    $e->statusCode);'
- &id015
  file: framework/web/Controller.php
  line: 362
  snippet: '     *   [[Url::to()]] will be used to convert the array into a URL.'
- &id016
  file: framework/web/Controller.php
  line: 374
  snippet: '        // calling Url::to() here because Response::redirect() modifies
    route before calling Url::to()'
- &id017
  file: framework/web/Controller.php
  line: 374
  snippet: '        // calling Url::to() here because Response::redirect() modifies
    route before calling Url::to()'
- &id018
  file: framework/web/Controller.php
  line: 375
  snippet: '        return $this->response->redirect(Url::to($url), $statusCode);'
- &id019
  file: framework/helpers/BaseUrl.php
  line: 172
  snippet: '     * echo Url::to([''site/index'']);'
- &id023
  file: framework/helpers/BaseUrl.php
  line: 175
  snippet: '     * echo Url::to([''site/index'', ''src'' => ''ref1'', ''#'' => ''name'']);'
- &id024
  file: framework/helpers/BaseUrl.php
  line: 178
  snippet: '     * echo Url::to([''@posts'']);'
- &id025
  file: framework/helpers/BaseUrl.php
  line: 181
  snippet: '     * echo Url::to();'
- &id026
  file: framework/helpers/BaseUrl.php
  line: 184
  snippet: '     * echo Url::to(''@web/images/logo.gif'');'
- &id027
  file: framework/helpers/BaseUrl.php
  line: 187
  snippet: '     * echo Url::to(''images/logo.gif'');'
- &id028
  file: framework/helpers/BaseUrl.php
  line: 190
  snippet: '     * echo Url::to(''@web/images/logo.gif'', true);'
- &id029
  file: framework/helpers/BaseUrl.php
  line: 193
  snippet: '     * echo Url::to(''@web/images/logo.gif'', ''https'');'
- &id030
  file: framework/helpers/BaseUrl.php
  line: 196
  snippet: '     * echo Url::to(''@web/images/logo.gif'', '''');'
- &id031
  file: framework/helpers/BaseHtml.php
  line: 237
  snippet: '     * @param array|string $url the URL of the external CSS file. This
    parameter will be processed by [[Url::to()]].'
- &id032
  file: framework/helpers/BaseHtml.php
  line: 249
  snippet: '     * @see Url::to()'
- &id033
  file: framework/helpers/BaseHtml.php
  line: 256
  snippet: '        $options[''href''] = Url::to($url);'
- &id034
  file: framework/helpers/BaseHtml.php
  line: 272
  snippet: '     * @param string $url the URL of the external JavaScript file. This
    parameter will be processed by [[Url::to()]].'
- &id035
  file: framework/helpers/BaseHtml.php
  line: 283
  snippet: '     * @see Url::to()'
- &id036
  file: framework/helpers/BaseHtml.php
  line: 287
  snippet: '        $options[''src''] = Url::to($url);'
- &id037
  file: framework/helpers/BaseHtml.php
  line: 330
  snippet: '     * @param array|string $action the form action URL. This parameter
    will be processed by [[Url::to()]].'
- &id038
  file: framework/helpers/BaseHtml.php
  line: 349
  snippet: '        $action = Url::to($action);'
- &id039
  file: framework/helpers/BaseHtml.php
  line: 408
  snippet: '     * @param array|string|null $url the URL for the hyperlink tag. This
    parameter will be processed by [[Url::to()]]'
- &id040
  file: framework/helpers/BaseHtml.php
  line: 412
  snippet: '     * If you want to use an absolute url you can call [[Url::to()]] yourself,
    before passing the URL to this method,'
- &id041
  file: framework/helpers/BaseHtml.php
  line: 416
  snippet: '     * Html::a(''link text'', Url::to($url, true))'
- &id042
  file: framework/helpers/BaseHtml.php
  line: 424
  snippet: '     * @see \yii\helpers\Url::to()'
- &id043
  file: framework/helpers/BaseHtml.php
  line: 429
  snippet: '            $options[''href''] = Url::to($url);'
- &id044
  file: framework/helpers/BaseHtml.php
  line: 456
  snippet: '     * @param array|string $src the image URL. This parameter will be
    processed by [[Url::to()]].'
- &id045
  file: framework/helpers/BaseHtml.php
  line: 463
  snippet: '     * descriptors and values are URLs. All URLs will be processed by
    [[Url::to()]].'
- &id046
  file: framework/helpers/BaseHtml.php
  line: 468
  snippet: '        $options[''src''] = Url::to($src);'
- &id047
  file: framework/helpers/BaseHtml.php
  line: 473
  snippet: '                $srcset[] = Url::to($url) . '' '' . $descriptor;'
- &id048
  file: framework/widgets/ActiveForm.php
  line: 41
  snippet: '     * @var array|string the form action URL. This parameter will be processed
    by [[\yii\helpers\Url::to()]].'
- &id049
  file: framework/widgets/ActiveForm.php
  line: 137
  snippet: '     * [[Url::to()]]. Please refer to [[Url::to()]] for more details on
    how to configure this property.'
- &id050
  file: framework/widgets/ActiveForm.php
  line: 137
  snippet: '     * [[Url::to()]]. Please refer to [[Url::to()]] for more details on
    how to configure this property.'
- &id051
  file: framework/widgets/ActiveForm.php
  line: 269
  snippet: '            $options[''validationUrl''] = Url::to($this->validationUrl);'
- &id052
  file: framework/widgets/Breadcrumbs.php
  line: 85
  snippet: '     *     ''url'' => ''url of the link'',      // optional, will be processed
    by Url::to()'
- &id053
  file: framework/widgets/Menu.php
  line: 238
  snippet: '                ''{url}'' => Html::encode(Url::to($item[''url''])),'
- &id054
  file: framework/web/Response.php
  line: 842
  snippet: '     * return Yii::$app->getResponse()->redirect($url);'
- &id055
  file: framework/web/Response.php
  line: 849
  snippet: '     * Yii::$app->getResponse()->redirect($url)->send();'
- &id056
  file: framework/web/Response.php
  line: 946
  snippet: '        return $this->redirect(Yii::$app->getRequest()->getUrl() . $anchor);'
- &id057
  file: framework/web/Application.php
  line: 93
  snippet: '                return $this->getResponse()->redirect(Url::to($url, $e->scheme),
    $e->statusCode);'
- &id058
  file: framework/web/Controller.php
  line: 354
  snippet: '     * return $this->redirect([''login'']);'
- &id059
  file: framework/web/Controller.php
  line: 375
  snippet: '        return $this->response->redirect(Url::to($url), $statusCode);'
- &id060
  file: framework/web/Controller.php
  line: 392
  snippet: '        return $this->response->redirect(Yii::$app->getHomeUrl());'
- &id061
  file: framework/web/Controller.php
  line: 415
  snippet: '        return $this->response->redirect(Yii::$app->getUser()->getReturnUrl($defaultUrl));'
- &id062
  file: framework/web/Controller.php
  line: 435
  snippet: '        return $this->response->redirect($this->request->getUrl() . $anchor);'
- &id063
  file: framework/web/User.php
  line: 477
  snippet: '                return Yii::$app->getResponse()->redirect($this->loginUrl);'
guards:
- file: framework/console/controllers/AssetController.php
  line: 154
  snippet: '            if (!isset($options[''baseUrl''])) {'
- file: framework/console/controllers/AssetController.php
  line: 155
  snippet: '                throw new Exception("Please specify ''baseUrl'' for the
    ''assetManager'' option.");'
- file: framework/console/controllers/AssetController.php
  line: 319
  snippet: '            if (!isset($target[''baseUrl''])) {'
- file: framework/console/controllers/AssetController.php
  line: 320
  snippet: '                throw new Exception("Please specify ''baseUrl'' for the
    ''$name'' target.");'
- file: framework/console/controllers/AssetController.php
  line: 468
  snippet: '                    ''baseUrl'' => $this->targets[$name][''baseUrl''],'
- file: framework/console/controllers/AssetController.php
  line: 468
  snippet: '                    ''baseUrl'' => $this->targets[$name][''baseUrl''],'
- file: framework/console/controllers/AssetController.php
  line: 724
  snippet: '            ''baseUrl'' => ''@web/assets'','
- file: framework/console/controllers/AssetController.php
  line: 732
  snippet: '        //''baseUrl'' => ''@web/assets'','
- &id006
  file: framework/web/AssetManager.php
  line: 93
  snippet: '    public $baseUrl = ''@web/assets'';'
- &id007
  file: framework/web/AssetManager.php
  line: 105
  snippet: '     * relative to [[baseUrl]] and [[basePath]].'
- &id008
  file: framework/web/AssetManager.php
  line: 108
  snippet: '     * which is relative to [[baseUrl]] and [[basePath]].'
- file: framework/web/AssetManager.php
  line: 235
  snippet: '        $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), ''/'');'
- file: framework/web/AssetManager.php
  line: 235
  snippet: '        $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), ''/'');'
- file: framework/web/AssetManager.php
  line: 340
  snippet: '     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]]
    or [[AssetManager::$baseUrl]] to the given asset path.'
- file: framework/web/AssetManager.php
  line: 340
  snippet: '     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]]
    or [[AssetManager::$baseUrl]] to the given asset path.'
- file: framework/web/AssetManager.php
  line: 551
  snippet: '        return [$dstFile, $this->baseUrl . "/$dir/$fileName"];'
- file: framework/web/AssetManager.php
  line: 615
  snippet: '        return [$dstDir, $this->baseUrl . ''/'' . $dir];'
- file: framework/web/AssetManager.php
  line: 654
  snippet: '            return $this->baseUrl . ''/'' . $this->hash($path) . (is_file($path)
    ? ''/'' . basename($path) : '''');'
- file: framework/web/AssetManager.php
  line: 677
  snippet: '     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]]
    or [[AssetManager::$baseUrl]] to the given asset path.'
- file: framework/web/AssetManager.php
  line: 677
  snippet: '     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]]
    or [[AssetManager::$baseUrl]] to the given asset path.'
- file: framework/web/AssetManager.php
  line: 688
  snippet: '                $baseUrl = Yii::getAlias(''@web'');'
- file: framework/web/AssetManager.php
  line: 691
  snippet: '                $baseUrl = $this->baseUrl;'
- file: framework/web/AssetManager.php
  line: 691
  snippet: '                $baseUrl = $this->baseUrl;'
- file: framework/web/AssetManager.php
  line: 694
  snippet: '            $baseUrl = $bundle->baseUrl;'
- file: framework/web/AssetManager.php
  line: 694
  snippet: '            $baseUrl = $bundle->baseUrl;'
- file: framework/web/AssetManager.php
  line: 701
  snippet: '        return "$baseUrl/$asset";'
- file: framework/web/UrlManager.php
  line: 41
  snippet: ' * @property string $baseUrl The base URL that is used by [[createUrl()]]
    to prepend to created URLs.'
- file: framework/web/UrlManager.php
  line: 165
  snippet: '    private $_baseUrl;'
- file: framework/web/UrlManager.php
  line: 419
  snippet: '        $baseUrl = $this->showScriptName || !$this->enablePrettyUrl ?
    $this->getScriptUrl() : $this->getBaseUrl();'
- file: framework/web/UrlManager.php
  line: 450
  snippet: '                    if ($baseUrl !== '''' && ($pos = strpos($url, ''/'',
    8)) !== false) {'
- file: framework/web/UrlManager.php
  line: 451
  snippet: '                        return substr($url, 0, $pos) . $baseUrl . substr($url,
    $pos) . $anchor;'
- file: framework/web/UrlManager.php
  line: 454
  snippet: '                    return $url . $baseUrl . $anchor;'
- file: framework/web/UrlManager.php
  line: 456
  snippet: '                    if ($baseUrl !== '''' && ($pos = strpos($url, ''/'',
    2)) !== false) {'
- file: framework/web/UrlManager.php
  line: 457
  snippet: '                        return substr($url, 0, $pos) . $baseUrl . substr($url,
    $pos) . $anchor;'
- file: framework/web/UrlManager.php
  line: 460
  snippet: '                    return $url . $baseUrl . $anchor;'
- file: framework/web/UrlManager.php
  line: 464
  snippet: '                return "$baseUrl/{$url}{$anchor}";'
- file: framework/web/UrlManager.php
  line: 475
  snippet: '            return "$baseUrl/{$route}{$anchor}";'
- file: framework/web/UrlManager.php
  line: 478
  snippet: '        $url = "$baseUrl?{$this->routeParam}=" . urlencode($route);'
- file: framework/web/UrlManager.php
  line: 576
  snippet: '     * It defaults to [[Request::baseUrl]].'
- file: framework/web/UrlManager.php
  line: 579
  snippet: '     * @throws InvalidConfigException if running in console application
    and [[baseUrl]] is not configured.'
- file: framework/web/UrlManager.php
  line: 583
  snippet: '        if ($this->_baseUrl === null) {'
- file: framework/web/UrlManager.php
  line: 586
  snippet: '                $this->_baseUrl = $request->getBaseUrl();'
- file: framework/web/UrlManager.php
  line: 588
  snippet: '                throw new InvalidConfigException(''Please configure UrlManager::baseUrl
    correctly as you are running a console application.'');'
- file: framework/web/UrlManager.php
  line: 592
  snippet: '        return $this->_baseUrl;'
- file: framework/web/UrlManager.php
  line: 602
  snippet: '        $this->_baseUrl = $value === null ? null : rtrim(Yii::getAlias($value),
    ''/'');'
- file: framework/web/Request.php
  line: 42
  snippet: ' * @property string $baseUrl The relative URL for the application.'
- file: framework/web/Request.php
  line: 842
  snippet: '    private $_baseUrl;'
- file: framework/web/Request.php
  line: 853
  snippet: '        if ($this->_baseUrl === null) {'
- file: framework/web/Request.php
  line: 854
  snippet: '            $this->_baseUrl = rtrim(dirname($this->getScriptUrl()), ''\\/'');'
- file: framework/web/Request.php
  line: 857
  snippet: '        return $this->_baseUrl;'
- file: framework/web/Request.php
  line: 868
  snippet: '        $this->_baseUrl = $value;'
- file: framework/web/Request.php
  line: 1011
  snippet: '        $baseUrl = $this->getBaseUrl();'
- file: framework/web/Request.php
  line: 1014
  snippet: '        } elseif ($baseUrl === '''' || strpos($pathInfo, $baseUrl) ===
    0) {'
- file: framework/web/Request.php
  line: 1014
  snippet: '        } elseif ($baseUrl === '''' || strpos($pathInfo, $baseUrl) ===
    0) {'
- file: framework/web/Request.php
  line: 1015
  snippet: '            $pathInfo = substr($pathInfo, strlen($baseUrl));'
- file: framework/web/View.php
  line: 564
  snippet: '                ''baseUrl'' => '''','
- file: framework/web/AssetBundle.php
  line: 72
  snippet: '    public $baseUrl;'
- file: framework/web/AssetBundle.php
  line: 98
  snippet: '     *   of the asset can be determined by prefixing [[baseUrl]] to the
    relative path.'
- file: framework/web/AssetBundle.php
  line: 167
  snippet: '        if ($this->baseUrl !== null) {'
- file: framework/web/AssetBundle.php
  line: 168
  snippet: '            $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), ''/'');'
- file: framework/web/AssetBundle.php
  line: 168
  snippet: '            $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), ''/'');'
- file: framework/web/AssetBundle.php
  line: 207
  snippet: '        if ($this->sourcePath !== null && !isset($this->basePath, $this->baseUrl))
    {'
- file: framework/web/AssetBundle.php
  line: 208
  snippet: '            list($this->basePath, $this->baseUrl) = $am->publish($this->sourcePath,
    $this->publishOptions);'
- file: framework/web/AssetBundle.php
  line: 211
  snippet: '        if (isset($this->basePath, $this->baseUrl) && ($converter = $am->getConverter())
    !== null) {'
- file: framework/base/Theme.php
  line: 55
  snippet: ' *         ''baseUrl'' => ''@web/themes/basic'','
- file: framework/base/Theme.php
  line: 68
  snippet: ' * @property string $baseUrl The base URL (without ending slash) for this
    theme. All resources of this theme'
- file: framework/base/Theme.php
  line: 84
  snippet: '    private $_baseUrl;'
- file: framework/base/Theme.php
  line: 93
  snippet: '        return $this->_baseUrl;'
- file: framework/base/Theme.php
  line: 102
  snippet: '        $this->_baseUrl = $url === null ? null : rtrim(Yii::getAlias($url),
    ''/'');'
- file: framework/base/Theme.php
  line: 161
  snippet: '     * Converts a relative URL into an absolute URL using [[baseUrl]].'
- file: framework/base/Theme.php
  line: 164
  snippet: '     * @throws InvalidConfigException if [[baseUrl]] is not set'
- file: framework/base/Theme.php
  line: 168
  snippet: '        if (($baseUrl = $this->getBaseUrl()) !== null) {'
- file: framework/base/Theme.php
  line: 169
  snippet: '            return $baseUrl . ''/'' . ltrim($url, ''/'');'
- file: framework/base/Theme.php
  line: 172
  snippet: '        throw new InvalidConfigException(''The "baseUrl" property must
    be set.'');'
- file: framework/web/UrlManager.php
  line: 42
  snippet: ' * @property string $hostInfo The host info (e.g. `https://www.example.com`)
    that is used by'
- file: framework/web/UrlManager.php
  line: 167
  snippet: '    private $_hostInfo;'
- file: framework/web/UrlManager.php
  line: 545
  snippet: '     * This method prepends the URL created by [[createUrl()]] with the
    [[hostInfo]].'
- file: framework/web/UrlManager.php
  line: 563
  snippet: '            $hostInfo = $this->getHostInfo();'
- file: framework/web/UrlManager.php
  line: 565
  snippet: '                $url = substr($hostInfo, 0, strpos($hostInfo, ''://''))
    . '':'' . $url;'
- file: framework/web/UrlManager.php
  line: 565
  snippet: '                $url = substr($hostInfo, 0, strpos($hostInfo, ''://''))
    . '':'' . $url;'
- file: framework/web/UrlManager.php
  line: 567
  snippet: '                $url = $hostInfo . $url;'
- file: framework/web/UrlManager.php
  line: 639
  snippet: '     * @throws InvalidConfigException if running in console application
    and [[hostInfo]] is not configured.'
- file: framework/web/UrlManager.php
  line: 643
  snippet: '        if ($this->_hostInfo === null) {'
- file: framework/web/UrlManager.php
  line: 646
  snippet: '                $this->_hostInfo = $request->getHostInfo();'
- file: framework/web/UrlManager.php
  line: 648
  snippet: '                throw new InvalidConfigException(''Please configure UrlManager::hostInfo
    correctly as you are running a console application.'');'
- file: framework/web/UrlManager.php
  line: 652
  snippet: '        return $this->_hostInfo;'
- file: framework/web/UrlManager.php
  line: 661
  snippet: '        $this->_hostInfo = $value === null ? null : rtrim($value, ''/'');'
- file: framework/web/Request.php
  line: 26
  snippet: ' * @property string|null $hostInfo Schema and hostname part (with port
    number if needed) of the request URL'
- file: framework/web/Request.php
  line: 756
  snippet: '    private $_hostInfo;'
- file: framework/web/Request.php
  line: 769
  snippet: '     * You may explicitly specify it by setting the [[setHostInfo()|hostInfo]]
    property.'
- file: framework/web/Request.php
  line: 775
  snippet: '     * > fix your webserver configuration or explicitly set the value
    by setting the [[setHostInfo()|hostInfo]] property.'
- file: framework/web/Request.php
  line: 785
  snippet: '        if ($this->_hostInfo === null) {'
- file: framework/web/Request.php
  line: 790
  snippet: '                $this->_hostInfo = $http . ''://'' . $this->getSecureForwardedHeaderTrustedPart(''host'');'
- file: framework/web/Request.php
  line: 792
  snippet: '                $this->_hostInfo = $http . ''://'' . trim(explode('','',
    $this->headers->get(''X-Forwarded-Host''))[0]);'
- file: framework/web/Request.php
  line: 794
  snippet: '                $this->_hostInfo = $http . ''://'' . trim(explode('','',
    $this->headers->get(''X-Original-Host''))[0]);'
- file: framework/web/Request.php
  line: 796
  snippet: '                $this->_hostInfo = $http . ''://'' . $this->headers->get(''Host'');'
- file: framework/web/Request.php
  line: 798
  snippet: '                $this->_hostInfo = $http . ''://'' . $_SERVER[''SERVER_NAME''];'
- file: framework/web/Request.php
  line: 801
  snippet: '                    $this->_hostInfo .= '':'' . $port;'
- file: framework/web/Request.php
  line: 806
  snippet: '        return $this->_hostInfo;'
- file: framework/web/Request.php
  line: 819
  snippet: '        $this->_hostInfo = $value === null ? null : rtrim($value, ''/'');'
- file: framework/web/Request.php
  line: 824
  snippet: '     * Value is calculated from current [[getHostInfo()|hostInfo]] property.'
- file: framework/web/Request.php
  line: 1053
  snippet: '     * This is a shortcut to the concatenation of [[hostInfo]] and [[url]].'
- file: framework/web/Request.php
  line: 1065
  snippet: '     * This refers to the portion of the URL that is after the [[hostInfo]]
    part.'
- file: framework/web/Request.php
  line: 1081
  snippet: '     * The URI must refer to the portion that is after [[hostInfo]].'
- file: framework/web/Request.php
  line: 1092
  snippet: '     * This refers to the portion that is after the [[hostInfo]] part.
    It includes the [[queryString]] part if any.'
- file: framework/web/Request.php
  line: 1446
  snippet: '            $this->_hostInfo = null;'
- file: framework/web/Request.php
  line: 1479
  snippet: '            $this->_hostInfo = null;'
- &id020
  file: framework/helpers/BaseUrl.php
  line: 89
  snippet: '     * - `true`: returning an absolute base URL whose scheme is the same
    as that in [[\yii\web\UrlManager::$hostInfo]].'
- &id021
  file: framework/helpers/BaseUrl.php
  line: 165
  snippet: '     * [[\yii\web\UrlManager::$hostInfo]]) will be returned. If `$url`
    is already an absolute URL, its scheme'
- &id022
  file: framework/helpers/BaseUrl.php
  line: 204
  snippet: '     * - `true`: returning an absolute base URL whose scheme is the same
    as that in [[\yii\web\UrlManager::$hostInfo]].'
- file: framework/helpers/BaseUrl.php
  line: 272
  snippet: '     * - `true`: returning an absolute base URL whose scheme is the same
    as that in [[\yii\web\UrlManager::$hostInfo]].'
- file: framework/helpers/BaseUrl.php
  line: 355
  snippet: '     * - `true`: returning an absolute base URL whose scheme is the same
    as that in [[\yii\web\UrlManager::$hostInfo]].'
- file: framework/helpers/BaseUrl.php
  line: 421
  snippet: '     * - `true`: returning an absolute base URL whose scheme is the same
    as that in [[\yii\web\UrlManager::$hostInfo]].'
- file: framework/filters/HostControl.php
  line: 110
  snippet: '     * @var string|null fallback host info (e.g. `https://www.yiiframework.com`)
    used when [[\yii\web\Request::$hostInfo|Request::$hostInfo]] is invalid.'
- file: framework/filters/HostControl.php
  line: 110
  snippet: '     * @var string|null fallback host info (e.g. `https://www.yiiframework.com`)
    used when [[\yii\web\Request::$hostInfo|Request::$hostInfo]] is invalid.'
- file: framework/filters/HostControl.php
  line: 111
  snippet: '     * This value will replace [[\yii\web\Request::$hostInfo|Request::$hostInfo]]
    before [[$denyCallback]] is called to make sure that'
- file: framework/filters/HostControl.php
  line: 111
  snippet: '     * This value will replace [[\yii\web\Request::$hostInfo|Request::$hostInfo]]
    before [[$denyCallback]] is called to make sure that'
- file: framework/filters/HostControl.php
  line: 112
  snippet: '     * an invalid host will not be used for further processing. You can
    set it to `null` to leave [[\yii\web\Request::$hostInfo|Request::$hostInfo]] untouched.'
- file: framework/filters/HostControl.php
  line: 112
  snippet: '     * an invalid host will not be used for further processing. You can
    set it to `null` to leave [[\yii\web\Request::$hostInfo|Request::$hostInfo]] untouched.'
- file: build/controllers/PhpDocController.php
  line: 61
  snippet: '            ''hostInfo'','
flows:
- source: *id001
  sink: *id002
  guards: []
- source: *id001
  sink: *id003
  guards: []
- source: *id001
  sink: *id004
  guards: []
- source: *id001
  sink: *id005
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id009
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id010
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id011
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id012
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id013
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id014
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id015
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id016
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id017
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id018
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id019
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id023
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id024
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id025
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id026
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id027
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id028
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id029
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id030
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id031
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id032
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id033
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id034
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id035
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id036
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id037
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id038
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id039
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id040
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id041
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id042
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id043
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id044
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id045
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id046
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id047
  guards:
  - *id020
  - *id021
  - *id022
- source: *id001
  sink: *id048
  guards: []
- source: *id001
  sink: *id049
  guards: []
- source: *id001
  sink: *id050
  guards: []
- source: *id001
  sink: *id051
  guards: []
- source: *id001
  sink: *id052
  guards: []
- source: *id001
  sink: *id053
  guards: []
- source: *id001
  sink: *id054
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id055
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id056
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id057
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id058
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id059
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id060
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id061
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id062
  guards:
  - *id006
  - *id007
  - *id008
- source: *id001
  sink: *id063
  guards:
  - *id006
  - *id007
  - *id008
notes:
- 'Configuration-dependent: ensure base URL / trusted hosts / proxies are pinned.'
