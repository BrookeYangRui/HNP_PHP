{
  "framework": "Yii2",
  "timestamp": "2025-09-24T16:22:53.291137",
  "sources": [
    {
      "file": "framework/web/Request.php",
      "line": 765,
      "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
    }
  ],
  "sinks": [
    {
      "file": "framework/captcha/CaptchaAction.php",
      "line": 139,
      "snippet": "                'url' => Url::to([$this->id, 'v' => uniqid('', true)]),"
    },
    {
      "file": "framework/grid/GridView.php",
      "line": 217,
      "snippet": "     * @var string|array|null the URL for returning the filtering result. [[Url::to()]] will be called to"
    },
    {
      "file": "framework/grid/GridView.php",
      "line": 344,
      "snippet": "            'filterUrl' => Url::to($filterUrl),"
    },
    {
      "file": "framework/web/Response.php",
      "line": 876,
      "snippet": "     *   [[Url::to()]] will be used to convert the array into a URL."
    },
    {
      "file": "framework/web/Response.php",
      "line": 898,
      "snippet": "        $normalizedUrl = Url::to($url);"
    },
    {
      "file": "framework/web/UrlNormalizerRedirectException.php",
      "line": 21,
      "snippet": "     * @see \\yii\\helpers\\Url::to()"
    },
    {
      "file": "framework/web/UrlNormalizerRedirectException.php",
      "line": 26,
      "snippet": "     * @see \\yii\\helpers\\Url::to()"
    },
    {
      "file": "framework/web/UrlNormalizerRedirectException.php",
      "line": 37,
      "snippet": "     * This will be used as first parameter for [[\\yii\\helpers\\Url::to()]]"
    },
    {
      "file": "framework/web/UrlNormalizerRedirectException.php",
      "line": 40,
      "snippet": "     * This will be used as second parameter for [[\\yii\\helpers\\Url::to()]]"
    },
    {
      "file": "framework/web/Application.php",
      "line": 93,
      "snippet": "                return $this->getResponse()->redirect(Url::to($url, $e->scheme), $e->statusCode);"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 362,
      "snippet": "     *   [[Url::to()]] will be used to convert the array into a URL."
    },
    {
      "file": "framework/web/Controller.php",
      "line": 374,
      "snippet": "        // calling Url::to() here because Response::redirect() modifies route before calling Url::to()"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 374,
      "snippet": "        // calling Url::to() here because Response::redirect() modifies route before calling Url::to()"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 375,
      "snippet": "        return $this->response->redirect(Url::to($url), $statusCode);"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 172,
      "snippet": "     * echo Url::to(['site/index']);"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 175,
      "snippet": "     * echo Url::to(['site/index', 'src' => 'ref1', '#' => 'name']);"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 178,
      "snippet": "     * echo Url::to(['@posts']);"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 181,
      "snippet": "     * echo Url::to();"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 184,
      "snippet": "     * echo Url::to('@web/images/logo.gif');"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 187,
      "snippet": "     * echo Url::to('images/logo.gif');"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 190,
      "snippet": "     * echo Url::to('@web/images/logo.gif', true);"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 193,
      "snippet": "     * echo Url::to('@web/images/logo.gif', 'https');"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 196,
      "snippet": "     * echo Url::to('@web/images/logo.gif', '');"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 237,
      "snippet": "     * @param array|string $url the URL of the external CSS file. This parameter will be processed by [[Url::to()]]."
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 249,
      "snippet": "     * @see Url::to()"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 256,
      "snippet": "        $options['href'] = Url::to($url);"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 272,
      "snippet": "     * @param string $url the URL of the external JavaScript file. This parameter will be processed by [[Url::to()]]."
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 283,
      "snippet": "     * @see Url::to()"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 287,
      "snippet": "        $options['src'] = Url::to($url);"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 330,
      "snippet": "     * @param array|string $action the form action URL. This parameter will be processed by [[Url::to()]]."
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 349,
      "snippet": "        $action = Url::to($action);"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 408,
      "snippet": "     * @param array|string|null $url the URL for the hyperlink tag. This parameter will be processed by [[Url::to()]]"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 412,
      "snippet": "     * If you want to use an absolute url you can call [[Url::to()]] yourself, before passing the URL to this method,"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 416,
      "snippet": "     * Html::a('link text', Url::to($url, true))"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 424,
      "snippet": "     * @see \\yii\\helpers\\Url::to()"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 429,
      "snippet": "            $options['href'] = Url::to($url);"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 456,
      "snippet": "     * @param array|string $src the image URL. This parameter will be processed by [[Url::to()]]."
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 463,
      "snippet": "     * descriptors and values are URLs. All URLs will be processed by [[Url::to()]]."
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 468,
      "snippet": "        $options['src'] = Url::to($src);"
    },
    {
      "file": "framework/helpers/BaseHtml.php",
      "line": 473,
      "snippet": "                $srcset[] = Url::to($url) . ' ' . $descriptor;"
    },
    {
      "file": "framework/widgets/ActiveForm.php",
      "line": 41,
      "snippet": "     * @var array|string the form action URL. This parameter will be processed by [[\\yii\\helpers\\Url::to()]]."
    },
    {
      "file": "framework/widgets/ActiveForm.php",
      "line": 137,
      "snippet": "     * [[Url::to()]]. Please refer to [[Url::to()]] for more details on how to configure this property."
    },
    {
      "file": "framework/widgets/ActiveForm.php",
      "line": 137,
      "snippet": "     * [[Url::to()]]. Please refer to [[Url::to()]] for more details on how to configure this property."
    },
    {
      "file": "framework/widgets/ActiveForm.php",
      "line": 269,
      "snippet": "            $options['validationUrl'] = Url::to($this->validationUrl);"
    },
    {
      "file": "framework/widgets/Breadcrumbs.php",
      "line": 85,
      "snippet": "     *     'url' => 'url of the link',      // optional, will be processed by Url::to()"
    },
    {
      "file": "framework/widgets/Menu.php",
      "line": 238,
      "snippet": "                '{url}' => Html::encode(Url::to($item['url'])),"
    },
    {
      "file": "framework/web/Response.php",
      "line": 842,
      "snippet": "     * return Yii::$app->getResponse()->redirect($url);"
    },
    {
      "file": "framework/web/Response.php",
      "line": 849,
      "snippet": "     * Yii::$app->getResponse()->redirect($url)->send();"
    },
    {
      "file": "framework/web/Response.php",
      "line": 946,
      "snippet": "        return $this->redirect(Yii::$app->getRequest()->getUrl() . $anchor);"
    },
    {
      "file": "framework/web/Application.php",
      "line": 93,
      "snippet": "                return $this->getResponse()->redirect(Url::to($url, $e->scheme), $e->statusCode);"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 354,
      "snippet": "     * return $this->redirect(['login']);"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 375,
      "snippet": "        return $this->response->redirect(Url::to($url), $statusCode);"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 392,
      "snippet": "        return $this->response->redirect(Yii::$app->getHomeUrl());"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 415,
      "snippet": "        return $this->response->redirect(Yii::$app->getUser()->getReturnUrl($defaultUrl));"
    },
    {
      "file": "framework/web/Controller.php",
      "line": 435,
      "snippet": "        return $this->response->redirect($this->request->getUrl() . $anchor);"
    },
    {
      "file": "framework/web/User.php",
      "line": 477,
      "snippet": "                return Yii::$app->getResponse()->redirect($this->loginUrl);"
    }
  ],
  "guards": [
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 154,
      "snippet": "            if (!isset($options['baseUrl'])) {"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 155,
      "snippet": "                throw new Exception(\"Please specify 'baseUrl' for the 'assetManager' option.\");"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 319,
      "snippet": "            if (!isset($target['baseUrl'])) {"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 320,
      "snippet": "                throw new Exception(\"Please specify 'baseUrl' for the '$name' target.\");"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 468,
      "snippet": "                    'baseUrl' => $this->targets[$name]['baseUrl'],"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 468,
      "snippet": "                    'baseUrl' => $this->targets[$name]['baseUrl'],"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 724,
      "snippet": "            'baseUrl' => '@web/assets',"
    },
    {
      "file": "framework/console/controllers/AssetController.php",
      "line": 732,
      "snippet": "        //'baseUrl' => '@web/assets',"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 93,
      "snippet": "    public $baseUrl = '@web/assets';"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 105,
      "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 108,
      "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 235,
      "snippet": "        $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), '/');"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 235,
      "snippet": "        $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), '/');"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 340,
      "snippet": "     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]] or [[AssetManager::$baseUrl]] to the given asset path."
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 340,
      "snippet": "     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]] or [[AssetManager::$baseUrl]] to the given asset path."
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 551,
      "snippet": "        return [$dstFile, $this->baseUrl . \"/$dir/$fileName\"];"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 615,
      "snippet": "        return [$dstDir, $this->baseUrl . '/' . $dir];"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 654,
      "snippet": "            return $this->baseUrl . '/' . $this->hash($path) . (is_file($path) ? '/' . basename($path) : '');"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 677,
      "snippet": "     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]] or [[AssetManager::$baseUrl]] to the given asset path."
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 677,
      "snippet": "     * The actual URL is obtained by prepending either [[AssetBundle::$baseUrl]] or [[AssetManager::$baseUrl]] to the given asset path."
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 688,
      "snippet": "                $baseUrl = Yii::getAlias('@web');"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 691,
      "snippet": "                $baseUrl = $this->baseUrl;"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 691,
      "snippet": "                $baseUrl = $this->baseUrl;"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 694,
      "snippet": "            $baseUrl = $bundle->baseUrl;"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 694,
      "snippet": "            $baseUrl = $bundle->baseUrl;"
    },
    {
      "file": "framework/web/AssetManager.php",
      "line": 701,
      "snippet": "        return \"$baseUrl/$asset\";"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 41,
      "snippet": " * @property string $baseUrl The base URL that is used by [[createUrl()]] to prepend to created URLs."
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 165,
      "snippet": "    private $_baseUrl;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 419,
      "snippet": "        $baseUrl = $this->showScriptName || !$this->enablePrettyUrl ? $this->getScriptUrl() : $this->getBaseUrl();"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 450,
      "snippet": "                    if ($baseUrl !== '' && ($pos = strpos($url, '/', 8)) !== false) {"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 451,
      "snippet": "                        return substr($url, 0, $pos) . $baseUrl . substr($url, $pos) . $anchor;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 454,
      "snippet": "                    return $url . $baseUrl . $anchor;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 456,
      "snippet": "                    if ($baseUrl !== '' && ($pos = strpos($url, '/', 2)) !== false) {"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 457,
      "snippet": "                        return substr($url, 0, $pos) . $baseUrl . substr($url, $pos) . $anchor;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 460,
      "snippet": "                    return $url . $baseUrl . $anchor;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 464,
      "snippet": "                return \"$baseUrl/{$url}{$anchor}\";"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 475,
      "snippet": "            return \"$baseUrl/{$route}{$anchor}\";"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 478,
      "snippet": "        $url = \"$baseUrl?{$this->routeParam}=\" . urlencode($route);"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 576,
      "snippet": "     * It defaults to [[Request::baseUrl]]."
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 579,
      "snippet": "     * @throws InvalidConfigException if running in console application and [[baseUrl]] is not configured."
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 583,
      "snippet": "        if ($this->_baseUrl === null) {"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 586,
      "snippet": "                $this->_baseUrl = $request->getBaseUrl();"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 588,
      "snippet": "                throw new InvalidConfigException('Please configure UrlManager::baseUrl correctly as you are running a console application.');"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 592,
      "snippet": "        return $this->_baseUrl;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 602,
      "snippet": "        $this->_baseUrl = $value === null ? null : rtrim(Yii::getAlias($value), '/');"
    },
    {
      "file": "framework/web/Request.php",
      "line": 42,
      "snippet": " * @property string $baseUrl The relative URL for the application."
    },
    {
      "file": "framework/web/Request.php",
      "line": 842,
      "snippet": "    private $_baseUrl;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 853,
      "snippet": "        if ($this->_baseUrl === null) {"
    },
    {
      "file": "framework/web/Request.php",
      "line": 854,
      "snippet": "            $this->_baseUrl = rtrim(dirname($this->getScriptUrl()), '\\\\/');"
    },
    {
      "file": "framework/web/Request.php",
      "line": 857,
      "snippet": "        return $this->_baseUrl;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 868,
      "snippet": "        $this->_baseUrl = $value;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 1011,
      "snippet": "        $baseUrl = $this->getBaseUrl();"
    },
    {
      "file": "framework/web/Request.php",
      "line": 1014,
      "snippet": "        } elseif ($baseUrl === '' || strpos($pathInfo, $baseUrl) === 0) {"
    },
    {
      "file": "framework/web/Request.php",
      "line": 1014,
      "snippet": "        } elseif ($baseUrl === '' || strpos($pathInfo, $baseUrl) === 0) {"
    },
    {
      "file": "framework/web/Request.php",
      "line": 1015,
      "snippet": "            $pathInfo = substr($pathInfo, strlen($baseUrl));"
    },
    {
      "file": "framework/web/View.php",
      "line": 564,
      "snippet": "                'baseUrl' => '',"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 72,
      "snippet": "    public $baseUrl;"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 98,
      "snippet": "     *   of the asset can be determined by prefixing [[baseUrl]] to the relative path."
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 167,
      "snippet": "        if ($this->baseUrl !== null) {"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 168,
      "snippet": "            $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), '/');"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 168,
      "snippet": "            $this->baseUrl = rtrim(Yii::getAlias($this->baseUrl), '/');"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 207,
      "snippet": "        if ($this->sourcePath !== null && !isset($this->basePath, $this->baseUrl)) {"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 208,
      "snippet": "            list($this->basePath, $this->baseUrl) = $am->publish($this->sourcePath, $this->publishOptions);"
    },
    {
      "file": "framework/web/AssetBundle.php",
      "line": 211,
      "snippet": "        if (isset($this->basePath, $this->baseUrl) && ($converter = $am->getConverter()) !== null) {"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 55,
      "snippet": " *         'baseUrl' => '@web/themes/basic',"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 68,
      "snippet": " * @property string $baseUrl The base URL (without ending slash) for this theme. All resources of this theme"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 84,
      "snippet": "    private $_baseUrl;"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 93,
      "snippet": "        return $this->_baseUrl;"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 102,
      "snippet": "        $this->_baseUrl = $url === null ? null : rtrim(Yii::getAlias($url), '/');"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 161,
      "snippet": "     * Converts a relative URL into an absolute URL using [[baseUrl]]."
    },
    {
      "file": "framework/base/Theme.php",
      "line": 164,
      "snippet": "     * @throws InvalidConfigException if [[baseUrl]] is not set"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 168,
      "snippet": "        if (($baseUrl = $this->getBaseUrl()) !== null) {"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 169,
      "snippet": "            return $baseUrl . '/' . ltrim($url, '/');"
    },
    {
      "file": "framework/base/Theme.php",
      "line": 172,
      "snippet": "        throw new InvalidConfigException('The \"baseUrl\" property must be set.');"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 42,
      "snippet": " * @property string $hostInfo The host info (e.g. `https://www.example.com`) that is used by"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 167,
      "snippet": "    private $_hostInfo;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 545,
      "snippet": "     * This method prepends the URL created by [[createUrl()]] with the [[hostInfo]]."
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 563,
      "snippet": "            $hostInfo = $this->getHostInfo();"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 565,
      "snippet": "                $url = substr($hostInfo, 0, strpos($hostInfo, '://')) . ':' . $url;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 565,
      "snippet": "                $url = substr($hostInfo, 0, strpos($hostInfo, '://')) . ':' . $url;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 567,
      "snippet": "                $url = $hostInfo . $url;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 639,
      "snippet": "     * @throws InvalidConfigException if running in console application and [[hostInfo]] is not configured."
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 643,
      "snippet": "        if ($this->_hostInfo === null) {"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 646,
      "snippet": "                $this->_hostInfo = $request->getHostInfo();"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 648,
      "snippet": "                throw new InvalidConfigException('Please configure UrlManager::hostInfo correctly as you are running a console application.');"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 652,
      "snippet": "        return $this->_hostInfo;"
    },
    {
      "file": "framework/web/UrlManager.php",
      "line": 661,
      "snippet": "        $this->_hostInfo = $value === null ? null : rtrim($value, '/');"
    },
    {
      "file": "framework/web/Request.php",
      "line": 26,
      "snippet": " * @property string|null $hostInfo Schema and hostname part (with port number if needed) of the request URL"
    },
    {
      "file": "framework/web/Request.php",
      "line": 756,
      "snippet": "    private $_hostInfo;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 769,
      "snippet": "     * You may explicitly specify it by setting the [[setHostInfo()|hostInfo]] property."
    },
    {
      "file": "framework/web/Request.php",
      "line": 775,
      "snippet": "     * > fix your webserver configuration or explicitly set the value by setting the [[setHostInfo()|hostInfo]] property."
    },
    {
      "file": "framework/web/Request.php",
      "line": 785,
      "snippet": "        if ($this->_hostInfo === null) {"
    },
    {
      "file": "framework/web/Request.php",
      "line": 790,
      "snippet": "                $this->_hostInfo = $http . '://' . $this->getSecureForwardedHeaderTrustedPart('host');"
    },
    {
      "file": "framework/web/Request.php",
      "line": 792,
      "snippet": "                $this->_hostInfo = $http . '://' . trim(explode(',', $this->headers->get('X-Forwarded-Host'))[0]);"
    },
    {
      "file": "framework/web/Request.php",
      "line": 794,
      "snippet": "                $this->_hostInfo = $http . '://' . trim(explode(',', $this->headers->get('X-Original-Host'))[0]);"
    },
    {
      "file": "framework/web/Request.php",
      "line": 796,
      "snippet": "                $this->_hostInfo = $http . '://' . $this->headers->get('Host');"
    },
    {
      "file": "framework/web/Request.php",
      "line": 798,
      "snippet": "                $this->_hostInfo = $http . '://' . $_SERVER['SERVER_NAME'];"
    },
    {
      "file": "framework/web/Request.php",
      "line": 801,
      "snippet": "                    $this->_hostInfo .= ':' . $port;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 806,
      "snippet": "        return $this->_hostInfo;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 819,
      "snippet": "        $this->_hostInfo = $value === null ? null : rtrim($value, '/');"
    },
    {
      "file": "framework/web/Request.php",
      "line": 824,
      "snippet": "     * Value is calculated from current [[getHostInfo()|hostInfo]] property."
    },
    {
      "file": "framework/web/Request.php",
      "line": 1053,
      "snippet": "     * This is a shortcut to the concatenation of [[hostInfo]] and [[url]]."
    },
    {
      "file": "framework/web/Request.php",
      "line": 1065,
      "snippet": "     * This refers to the portion of the URL that is after the [[hostInfo]] part."
    },
    {
      "file": "framework/web/Request.php",
      "line": 1081,
      "snippet": "     * The URI must refer to the portion that is after [[hostInfo]]."
    },
    {
      "file": "framework/web/Request.php",
      "line": 1092,
      "snippet": "     * This refers to the portion that is after the [[hostInfo]] part. It includes the [[queryString]] part if any."
    },
    {
      "file": "framework/web/Request.php",
      "line": 1446,
      "snippet": "            $this->_hostInfo = null;"
    },
    {
      "file": "framework/web/Request.php",
      "line": 1479,
      "snippet": "            $this->_hostInfo = null;"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 89,
      "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 165,
      "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 204,
      "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 272,
      "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 355,
      "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
    },
    {
      "file": "framework/helpers/BaseUrl.php",
      "line": 421,
      "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
    },
    {
      "file": "framework/filters/HostControl.php",
      "line": 110,
      "snippet": "     * @var string|null fallback host info (e.g. `https://www.yiiframework.com`) used when [[\\yii\\web\\Request::$hostInfo|Request::$hostInfo]] is invalid."
    },
    {
      "file": "framework/filters/HostControl.php",
      "line": 110,
      "snippet": "     * @var string|null fallback host info (e.g. `https://www.yiiframework.com`) used when [[\\yii\\web\\Request::$hostInfo|Request::$hostInfo]] is invalid."
    },
    {
      "file": "framework/filters/HostControl.php",
      "line": 111,
      "snippet": "     * This value will replace [[\\yii\\web\\Request::$hostInfo|Request::$hostInfo]] before [[$denyCallback]] is called to make sure that"
    },
    {
      "file": "framework/filters/HostControl.php",
      "line": 111,
      "snippet": "     * This value will replace [[\\yii\\web\\Request::$hostInfo|Request::$hostInfo]] before [[$denyCallback]] is called to make sure that"
    },
    {
      "file": "framework/filters/HostControl.php",
      "line": 112,
      "snippet": "     * an invalid host will not be used for further processing. You can set it to `null` to leave [[\\yii\\web\\Request::$hostInfo|Request::$hostInfo]] untouched."
    },
    {
      "file": "framework/filters/HostControl.php",
      "line": 112,
      "snippet": "     * an invalid host will not be used for further processing. You can set it to `null` to leave [[\\yii\\web\\Request::$hostInfo|Request::$hostInfo]] untouched."
    },
    {
      "file": "build/controllers/PhpDocController.php",
      "line": 61,
      "snippet": "            'hostInfo',"
    }
  ],
  "flows": [
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/captcha/CaptchaAction.php",
        "line": 139,
        "snippet": "                'url' => Url::to([$this->id, 'v' => uniqid('', true)]),"
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/grid/GridView.php",
        "line": 217,
        "snippet": "     * @var string|array|null the URL for returning the filtering result. [[Url::to()]] will be called to"
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/grid/GridView.php",
        "line": 344,
        "snippet": "            'filterUrl' => Url::to($filterUrl),"
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Response.php",
        "line": 876,
        "snippet": "     *   [[Url::to()]] will be used to convert the array into a URL."
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Response.php",
        "line": 898,
        "snippet": "        $normalizedUrl = Url::to($url);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/UrlNormalizerRedirectException.php",
        "line": 21,
        "snippet": "     * @see \\yii\\helpers\\Url::to()"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/UrlNormalizerRedirectException.php",
        "line": 26,
        "snippet": "     * @see \\yii\\helpers\\Url::to()"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/UrlNormalizerRedirectException.php",
        "line": 37,
        "snippet": "     * This will be used as first parameter for [[\\yii\\helpers\\Url::to()]]"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/UrlNormalizerRedirectException.php",
        "line": 40,
        "snippet": "     * This will be used as second parameter for [[\\yii\\helpers\\Url::to()]]"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Application.php",
        "line": 93,
        "snippet": "                return $this->getResponse()->redirect(Url::to($url, $e->scheme), $e->statusCode);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 362,
        "snippet": "     *   [[Url::to()]] will be used to convert the array into a URL."
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 374,
        "snippet": "        // calling Url::to() here because Response::redirect() modifies route before calling Url::to()"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 374,
        "snippet": "        // calling Url::to() here because Response::redirect() modifies route before calling Url::to()"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 375,
        "snippet": "        return $this->response->redirect(Url::to($url), $statusCode);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 172,
        "snippet": "     * echo Url::to(['site/index']);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 175,
        "snippet": "     * echo Url::to(['site/index', 'src' => 'ref1', '#' => 'name']);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 178,
        "snippet": "     * echo Url::to(['@posts']);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 181,
        "snippet": "     * echo Url::to();"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 184,
        "snippet": "     * echo Url::to('@web/images/logo.gif');"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 187,
        "snippet": "     * echo Url::to('images/logo.gif');"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 190,
        "snippet": "     * echo Url::to('@web/images/logo.gif', true);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 193,
        "snippet": "     * echo Url::to('@web/images/logo.gif', 'https');"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseUrl.php",
        "line": 196,
        "snippet": "     * echo Url::to('@web/images/logo.gif', '');"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 237,
        "snippet": "     * @param array|string $url the URL of the external CSS file. This parameter will be processed by [[Url::to()]]."
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 249,
        "snippet": "     * @see Url::to()"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 256,
        "snippet": "        $options['href'] = Url::to($url);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 272,
        "snippet": "     * @param string $url the URL of the external JavaScript file. This parameter will be processed by [[Url::to()]]."
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 283,
        "snippet": "     * @see Url::to()"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 287,
        "snippet": "        $options['src'] = Url::to($url);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 330,
        "snippet": "     * @param array|string $action the form action URL. This parameter will be processed by [[Url::to()]]."
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 349,
        "snippet": "        $action = Url::to($action);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 408,
        "snippet": "     * @param array|string|null $url the URL for the hyperlink tag. This parameter will be processed by [[Url::to()]]"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 412,
        "snippet": "     * If you want to use an absolute url you can call [[Url::to()]] yourself, before passing the URL to this method,"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 416,
        "snippet": "     * Html::a('link text', Url::to($url, true))"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 424,
        "snippet": "     * @see \\yii\\helpers\\Url::to()"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 429,
        "snippet": "            $options['href'] = Url::to($url);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 456,
        "snippet": "     * @param array|string $src the image URL. This parameter will be processed by [[Url::to()]]."
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 463,
        "snippet": "     * descriptors and values are URLs. All URLs will be processed by [[Url::to()]]."
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 468,
        "snippet": "        $options['src'] = Url::to($src);"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/helpers/BaseHtml.php",
        "line": 473,
        "snippet": "                $srcset[] = Url::to($url) . ' ' . $descriptor;"
      },
      "guards": [
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 89,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 165,
          "snippet": "     * [[\\yii\\web\\UrlManager::$hostInfo]]) will be returned. If `$url` is already an absolute URL, its scheme"
        },
        {
          "file": "framework/helpers/BaseUrl.php",
          "line": 204,
          "snippet": "     * - `true`: returning an absolute base URL whose scheme is the same as that in [[\\yii\\web\\UrlManager::$hostInfo]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/widgets/ActiveForm.php",
        "line": 41,
        "snippet": "     * @var array|string the form action URL. This parameter will be processed by [[\\yii\\helpers\\Url::to()]]."
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/widgets/ActiveForm.php",
        "line": 137,
        "snippet": "     * [[Url::to()]]. Please refer to [[Url::to()]] for more details on how to configure this property."
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/widgets/ActiveForm.php",
        "line": 137,
        "snippet": "     * [[Url::to()]]. Please refer to [[Url::to()]] for more details on how to configure this property."
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/widgets/ActiveForm.php",
        "line": 269,
        "snippet": "            $options['validationUrl'] = Url::to($this->validationUrl);"
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/widgets/Breadcrumbs.php",
        "line": 85,
        "snippet": "     *     'url' => 'url of the link',      // optional, will be processed by Url::to()"
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/widgets/Menu.php",
        "line": 238,
        "snippet": "                '{url}' => Html::encode(Url::to($item['url'])),"
      },
      "guards": []
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Response.php",
        "line": 842,
        "snippet": "     * return Yii::$app->getResponse()->redirect($url);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Response.php",
        "line": 849,
        "snippet": "     * Yii::$app->getResponse()->redirect($url)->send();"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Response.php",
        "line": 946,
        "snippet": "        return $this->redirect(Yii::$app->getRequest()->getUrl() . $anchor);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Application.php",
        "line": 93,
        "snippet": "                return $this->getResponse()->redirect(Url::to($url, $e->scheme), $e->statusCode);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 354,
        "snippet": "     * return $this->redirect(['login']);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 375,
        "snippet": "        return $this->response->redirect(Url::to($url), $statusCode);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 392,
        "snippet": "        return $this->response->redirect(Yii::$app->getHomeUrl());"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 415,
        "snippet": "        return $this->response->redirect(Yii::$app->getUser()->getReturnUrl($defaultUrl));"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/Controller.php",
        "line": 435,
        "snippet": "        return $this->response->redirect($this->request->getUrl() . $anchor);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    },
    {
      "source": {
        "file": "framework/web/Request.php",
        "line": 765,
        "snippet": "     * return the value of `$_SERVER['HTTP_HOST']` if it is available or `$_SERVER['SERVER_NAME']` if not."
      },
      "sink": {
        "file": "framework/web/User.php",
        "line": 477,
        "snippet": "                return Yii::$app->getResponse()->redirect($this->loginUrl);"
      },
      "guards": [
        {
          "file": "framework/web/AssetManager.php",
          "line": 93,
          "snippet": "    public $baseUrl = '@web/assets';"
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 105,
          "snippet": "     * relative to [[baseUrl]] and [[basePath]]."
        },
        {
          "file": "framework/web/AssetManager.php",
          "line": 108,
          "snippet": "     * which is relative to [[baseUrl]] and [[basePath]]."
        }
      ]
    }
  ],
  "notes": [
    "Configuration-dependent: ensure base URL / trusted hosts / proxies are pinned."
  ]
}